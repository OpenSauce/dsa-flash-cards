# ── GRAPH (ADJACENCY LIST) ─────────────────────────────────────────────────
- title: "Graph (Adjacency List) - Overview"
  difficulty: "easy"
  tags: ["graph", "identify"]
  Front: |
    Which data structure …

    - Represents vertices with **lists of neighbours**
    - Uses **O(V+E)** space
    - Allows **O(1)** expected add‑edge?
  Back: "Graph (Adjacency List)"

- title: "Graph – Add Edge (Undirected)"
  difficulty: "easy"
  tags: ["graph", "add edge"]
  Front: |
   ```go
   g[u] = append(g[u], v)
   g[v] = append(g[v], u)
   ```
  Back: "Add undirected edge (O(1) average)"

- title: "Graph – BFS Traversal"
  difficulty: "easy"
  tags: ["graph", "bfs"]
  Front: |
   ```go
   q := []int{start}
   vis := map[int]bool{start: true}
   for len(q) > 0 {
       v := q[0]; q = q[1:]
       for _, nb := range g[v] {
           if !vis[nb] {
               vis[nb] = true
               q = append(q, nb)
           }
       }
   }
   ```
  Back: "Breadth‑First Search (O(V+E))"

