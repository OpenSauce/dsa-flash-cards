# ── FENWICK TREE / BINARY INDEXED TREE ──────────────────────────────────────
- title: "Fenwick Tree - Overview"
  difficulty: "medium"
  tags: ["fenwick tree", "identify"]
  Front: |
    Which data structure …

    - Stores **prefix sums** in a clever bit‑indexed array
    - Supports **point updates** and **prefix queries** in **O(log n)**?
  Back: "Fenwick Tree (Binary Indexed Tree)"

# Point update
- title: "Fenwick Tree – Update"
  difficulty: "medium"
  tags: ["fenwick tree", "update"]
  Front: |
    ```go
    func add(i, delta int) {
        for i <= n {
            bit[i] += delta
            i += i & -i
        }
    }
    ```
  Back: "Add / Point update – O(log n)"

# Prefix sum query
- title: "Fenwick Tree – Prefix Sum"
  difficulty: "medium"
  tags: ["fenwick tree", "query"]
  Front: |
    ```go
    func prefix(i int) int {
        sum := 0
        for i > 0 {
            sum += bit[i]
            i -= i & -i
        }
        return sum
    }
    ```
  Back: "Prefix sum query – O(log n)"
